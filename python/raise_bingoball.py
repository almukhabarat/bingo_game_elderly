# Choregraphe bezier export in Python.
from naoqi import ALProxy

names = list()
times = list()
keys = list()

names.append("HeadPitch")
times.append([0, 0.9, 1.9, 2.9, 3.9, 4.9, 5.9, 6.9])
keys.append([[-0.176453, [3, -0.0333333, 0], [3, 0.3, 0]], [-0.176453, [3, -0.3, 0], [3, 0.333333, 0]], [-0.176453, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.176453, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.176453, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.176453, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.176453, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.176453, [3, -0.333333, 0], [3, 0, 0]]])

names.append("HeadYaw")
times.append([0, 0.9, 1.9, 2.9, 3.9, 4.9, 5.9, 6.9])
keys.append([[-0.032256, [3, -0.0333333, 0], [3, 0.3, 0]], [-0.032256, [3, -0.3, 0], [3, 0.333333, 0]], [-0.032256, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.032256, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.032256, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.032256, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.032256, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.032256, [3, -0.333333, 0], [3, 0, 0]]])

names.append("LAnklePitch")
times.append([0, 0.9, 1.9, 2.9, 3.9, 4.9, 5.9, 6.9])
keys.append([[0.0797259, [3, -0.0333333, 0], [3, 0.3, 0]], [0.0904641, [3, -0.3, 0], [3, 0.333333, 0]], [0.0797259, [3, -0.333333, 0], [3, 0.333333, 0]], [0.0904641, [3, -0.333333, 0], [3, 0.333333, 0]], [0.0904641, [3, -0.333333, 0], [3, 0.333333, 0]], [0.0904641, [3, -0.333333, 0], [3, 0.333333, 0]], [0.0904641, [3, -0.333333, 0], [3, 0.333333, 0]], [0.0904641, [3, -0.333333, 0], [3, 0, 0]]])

names.append("LAnkleRoll")
times.append([0, 0.9, 1.9, 2.9, 3.9, 4.9, 5.9, 6.9])
keys.append([[-0.113474, [3, -0.0333333, 0], [3, 0.3, 0]], [-0.113474, [3, -0.3, 0], [3, 0.333333, 0]], [-0.113474, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.113474, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.113474, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.113474, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.113474, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.113474, [3, -0.333333, 0], [3, 0, 0]]])

names.append("LElbowRoll")
times.append([0, 0.9, 1.9, 2.9, 3.9, 4.9, 5.9, 6.9])
keys.append([[-0.427944, [3, -0.0333333, 0], [3, 0.3, 0]], [-1.22562, [3, -0.3, 0], [3, 0.333333, 0]], [-1.15813, [3, -0.333333, -0.0674953], [3, 0.333333, 0.0674953]], [-0.608956, [3, -0.333333, 0], [3, 0.333333, 0]], [-1.4864, [3, -0.333333, 0], [3, 0.333333, 0]], [-1.20261, [3, -0.333333, -0.169763], [3, 0.333333, 0.169763]], [-0.467829, [3, -0.333333, 0], [3, 0.333333, 0]], [-1.52322, [3, -0.333333, 0], [3, 0, 0]]])

names.append("LElbowYaw")
times.append([0, 0.9, 1.9, 2.9, 3.9, 4.9, 5.9, 6.9])
keys.append([[-1.17969, [3, -0.0333333, 0], [3, 0.3, 0]], [-0.770109, [3, -0.3, 0], [3, 0.333333, 0]], [-1.15208, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.995607, [3, -0.333333, -0.0350264], [3, 0.333333, 0.0350264]], [-0.941918, [3, -0.333333, 0], [3, 0.333333, 0]], [-1.2748, [3, -0.333333, 0.0920399], [3, 0.333333, -0.0920399]], [-1.49416, [3, -0.333333, 0.0122732], [3, 0.333333, -0.0122732]], [-1.50643, [3, -0.333333, 0], [3, 0, 0]]])

names.append("LHand")
times.append([0, 0.9, 1.9, 2.9, 3.9, 4.9, 5.9, 6.9])
keys.append([[-0.237757, [3, -0.0333333, 0], [3, 0.3, 0]], [0.0232, [3, -0.3, -0.0018], [3, 0.333333, 0.002]], [0.0252, [3, -0.333333, 0], [3, 0.333333, 0]], [0.0232, [3, -0.333333, 0], [3, 0.333333, 0]], [0.0232, [3, -0.333333, 0], [3, 0.333333, 0]], [0.0140001, [3, -0.333333, 0], [3, 0.333333, 0]], [0.0140001, [3, -0.333333, 0], [3, 0.333333, 0]], [0.0232, [3, -0.333333, 0], [3, 0, 0]]])

names.append("LHipPitch")
times.append([0, 0.9, 1.9, 2.9, 3.9, 4.9, 5.9, 6.9])
keys.append([[0.136568, [3, -0.0333333, 0], [3, 0.3, 0]], [0.12583, [3, -0.3, 0], [3, 0.333333, 0]], [0.136568, [3, -0.333333, 0], [3, 0.333333, 0]], [0.12583, [3, -0.333333, 0], [3, 0.333333, 0]], [0.12583, [3, -0.333333, 0], [3, 0.333333, 0]], [0.136568, [3, -0.333333, 0], [3, 0.333333, 0]], [0.136568, [3, -0.333333, 0], [3, 0.333333, 0]], [0.12583, [3, -0.333333, 0], [3, 0, 0]]])

names.append("LHipRoll")
times.append([0, 0.9, 1.9, 2.9, 3.9, 4.9, 5.9, 6.9])
keys.append([[0.11049, [3, -0.0333333, 0], [3, 0.3, 0]], [0.11049, [3, -0.3, 0], [3, 0.333333, 0]], [0.11049, [3, -0.333333, 0], [3, 0.333333, 0]], [0.11049, [3, -0.333333, 0], [3, 0.333333, 0]], [0.11049, [3, -0.333333, 0], [3, 0.333333, 0]], [0.11049, [3, -0.333333, 0], [3, 0.333333, 0]], [0.11049, [3, -0.333333, 0], [3, 0.333333, 0]], [0.11049, [3, -0.333333, 0], [3, 0, 0]]])

names.append("LHipYawPitch")
times.append([0, 0.9, 1.9, 2.9, 3.9, 4.9, 5.9, 6.9])
keys.append([[-0.170232, [3, -0.0333333, 0], [3, 0.3, 0]], [-0.170232, [3, -0.3, 0], [3, 0.333333, 0]], [-0.170232, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.170232, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.170232, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.170232, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.170232, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.170232, [3, -0.333333, 0], [3, 0, 0]]])

names.append("LKneePitch")
times.append([0, 0.9, 1.9, 2.9, 3.9, 4.9, 5.9, 6.9])
keys.append([[-0.0874801, [3, -0.0333333, 0], [3, 0.3, 0]], [-0.0874801, [3, -0.3, 0], [3, 0.333333, 0]], [-0.0874801, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.0874801, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.0874801, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.0874801, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.0874801, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.0874801, [3, -0.333333, 0], [3, 0, 0]]])

names.append("LShoulderPitch")
times.append([0, 0.9, 1.9, 2.9, 3.9, 4.9, 5.9, 6.9])
keys.append([[1.52322, [3, -0.0333333, 0], [3, 0.3, 0]], [1.42504, [3, -0.3, 0.0574041], [3, 0.333333, -0.0637823]], [1.15966, [3, -0.333333, 0.0649393], [3, 0.333333, -0.0649393]], [1.03541, [3, -0.333333, 0], [3, 0.333333, 0]], [1.15506, [3, -0.333333, 0], [3, 0.333333, 0]], [0.766959, [3, -0.333333, 0.108147], [3, 0.333333, -0.108147]], [0.506179, [3, -0.333333, 0], [3, 0.333333, 0]], [1.03234, [3, -0.333333, 0], [3, 0, 0]]])

names.append("LShoulderRoll")
times.append([0, 0.9, 1.9, 2.9, 3.9, 4.9, 5.9, 6.9])
keys.append([[0.16563, [3, -0.0333333, 0], [3, 0.3, 0]], [-0.0951499, [3, -0.3, 0.0685457], [3, 0.333333, -0.0761619]], [-0.268493, [3, -0.333333, 0.0370717], [3, 0.333333, -0.0370717]], [-0.31758, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.092082, [3, -0.333333, -0.0756774], [3, 0.333333, 0.0756774]], [0.136484, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.0583338, [3, -0.333333, 0.039117], [3, 0.333333, -0.039117]], [-0.0982179, [3, -0.333333, 0], [3, 0, 0]]])

names.append("LWristYaw")
times.append([0, 0.9, 1.9, 2.9, 3.9, 4.9, 5.9, 6.9])
keys.append([[0.122678, [3, -0.0333333, 0], [3, 0.3, 0]], [1.46953, [3, -0.3, -0.0566036], [3, 0.333333, 0.0628929]], [1.53242, [3, -0.333333, 0], [3, 0.333333, 0]], [1.49868, [3, -0.333333, 0.0337477], [3, 0.333333, -0.0337477]], [1.14892, [3, -0.333333, 0], [3, 0.333333, 0]], [1.16733, [3, -0.333333, -0.018408], [3, 0.333333, 0.018408]], [1.61066, [3, -0.333333, 0], [3, 0.333333, 0]], [1.45112, [3, -0.333333, 0], [3, 0, 0]]])

names.append("RAnklePitch")
times.append([0, 0.9, 1.9, 2.9, 3.9, 4.9, 5.9, 6.9])
keys.append([[0.0859461, [3, -0.0333333, 0], [3, 0.3, 0]], [0.0859461, [3, -0.3, 0], [3, 0.333333, 0]], [0.0859461, [3, -0.333333, 0], [3, 0.333333, 0]], [0.0859461, [3, -0.333333, 0], [3, 0.333333, 0]], [0.0859461, [3, -0.333333, 0], [3, 0.333333, 0]], [0.0859461, [3, -0.333333, 0], [3, 0.333333, 0]], [0.0859461, [3, -0.333333, 0], [3, 0.333333, 0]], [0.0859461, [3, -0.333333, 0], [3, 0, 0]]])

names.append("RAnkleRoll")
times.append([0, 0.9, 1.9, 2.9, 3.9, 4.9, 5.9, 6.9])
keys.append([[0.11049, [3, -0.0333333, 0], [3, 0.3, 0]], [0.11049, [3, -0.3, 0], [3, 0.333333, 0]], [0.11049, [3, -0.333333, 0], [3, 0.333333, 0]], [0.11049, [3, -0.333333, 0], [3, 0.333333, 0]], [0.11049, [3, -0.333333, 0], [3, 0.333333, 0]], [0.11049, [3, -0.333333, 0], [3, 0.333333, 0]], [0.11049, [3, -0.333333, 0], [3, 0.333333, 0]], [0.11049, [3, -0.333333, 0], [3, 0, 0]]])

names.append("RElbowRoll")
times.append([0, 0.9, 1.9, 2.9, 3.9, 4.9, 5.9, 6.9])
keys.append([[0.412688, [3, -0.0333333, 0], [3, 0.3, 0]], [0.412688, [3, -0.3, 0], [3, 0.333333, 0]], [0.412688, [3, -0.333333, 0], [3, 0.333333, 0]], [0.412688, [3, -0.333333, 0], [3, 0.333333, 0]], [0.412688, [3, -0.333333, 0], [3, 0.333333, 0]], [0.412688, [3, -0.333333, 0], [3, 0.333333, 0]], [0.412688, [3, -0.333333, 0], [3, 0.333333, 0]], [0.412688, [3, -0.333333, 0], [3, 0, 0]]])

names.append("RElbowYaw")
times.append([0, 0.9, 1.9, 2.9, 3.9, 4.9, 5.9, 6.9])
keys.append([[1.20722, [3, -0.0333333, 0], [3, 0.3, 0]], [1.20722, [3, -0.3, 0], [3, 0.333333, 0]], [1.20722, [3, -0.333333, 0], [3, 0.333333, 0]], [1.20722, [3, -0.333333, 0], [3, 0.333333, 0]], [1.20722, [3, -0.333333, 0], [3, 0.333333, 0]], [1.20722, [3, -0.333333, 0], [3, 0.333333, 0]], [1.20722, [3, -0.333333, 0], [3, 0.333333, 0]], [1.20722, [3, -0.333333, 0], [3, 0, 0]]])

names.append("RHand")
times.append([0, 0.9, 1.9, 2.9, 3.9, 4.9, 5.9, 6.9])
keys.append([[0.3144, [3, -0.0333333, 0], [3, 0.3, 0]], [0.3144, [3, -0.3, 0], [3, 0.333333, 0]], [0.3144, [3, -0.333333, 0], [3, 0.333333, 0]], [0.3144, [3, -0.333333, 0], [3, 0.333333, 0]], [0.3144, [3, -0.333333, 0], [3, 0.333333, 0]], [0.3144, [3, -0.333333, 0], [3, 0.333333, 0]], [0.3144, [3, -0.333333, 0], [3, 0.333333, 0]], [0.3144, [3, -0.333333, 0], [3, 0, 0]]])

names.append("RHipPitch")
times.append([0, 0.9, 1.9, 2.9, 3.9, 4.9, 5.9, 6.9])
keys.append([[0.130348, [3, -0.0333333, 0], [3, 0.3, 0]], [0.130348, [3, -0.3, 0], [3, 0.333333, 0]], [0.130348, [3, -0.333333, 0], [3, 0.333333, 0]], [0.130348, [3, -0.333333, 0], [3, 0.333333, 0]], [0.130348, [3, -0.333333, 0], [3, 0.333333, 0]], [0.128814, [3, -0.333333, 0], [3, 0.333333, 0]], [0.141086, [3, -0.333333, 0], [3, 0.333333, 0]], [0.130348, [3, -0.333333, 0], [3, 0, 0]]])

names.append("RHipRoll")
times.append([0, 0.9, 1.9, 2.9, 3.9, 4.9, 5.9, 6.9])
keys.append([[-0.110406, [3, -0.0333333, 0], [3, 0.3, 0]], [-0.110406, [3, -0.3, 0], [3, 0.333333, 0]], [-0.121144, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.110406, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.110406, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.121144, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.121144, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.121144, [3, -0.333333, 0], [3, 0, 0]]])

names.append("RHipYawPitch")
times.append([0, 0.9, 1.9, 2.9, 3.9, 4.9, 5.9, 6.9])
keys.append([[-0.170232, [3, -0.0333333, 0], [3, 0.3, 0]], [-0.170232, [3, -0.3, 0], [3, 0.333333, 0]], [-0.170232, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.170232, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.170232, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.170232, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.170232, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.170232, [3, -0.333333, 0], [3, 0, 0]]])

names.append("RKneePitch")
times.append([0, 0.9, 1.9, 2.9, 3.9, 4.9, 5.9, 6.9])
keys.append([[-0.0812599, [3, -0.0333333, 0], [3, 0.3, 0]], [-0.093532, [3, -0.3, 0], [3, 0.333333, 0]], [-0.093532, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.093532, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.093532, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.093532, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.093532, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.093532, [3, -0.333333, 0], [3, 0, 0]]])

names.append("RShoulderPitch")
times.append([0, 0.9, 1.9, 2.9, 3.9, 4.9, 5.9, 6.9])
keys.append([[1.5187, [3, -0.0333333, 0], [3, 0.3, 0]], [1.5187, [3, -0.3, 0], [3, 0.333333, 0]], [1.5187, [3, -0.333333, 0], [3, 0.333333, 0]], [1.5187, [3, -0.333333, 0], [3, 0.333333, 0]], [1.5187, [3, -0.333333, 0], [3, 0.333333, 0]], [1.5187, [3, -0.333333, 0], [3, 0.333333, 0]], [1.5187, [3, -0.333333, 0], [3, 0.333333, 0]], [1.5187, [3, -0.333333, 0], [3, 0, 0]]])

names.append("RShoulderRoll")
times.append([0, 0.9, 1.9, 2.9, 3.9, 4.9, 5.9, 6.9])
keys.append([[-0.165714, [3, -0.0333333, 0], [3, 0.3, 0]], [-0.06447, [3, -0.3, -0.0193283], [3, 0.333333, 0.0214759]], [-0.0429941, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.06447, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.06447, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.047596, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.047596, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.06447, [3, -0.333333, 0], [3, 0, 0]]])

names.append("RWristYaw")
times.append([0, 0.9, 1.9, 2.9, 3.9, 4.9, 5.9, 6.9])
keys.append([[0.136484, [3, -0.0333333, 0], [3, 0.3, 0]], [0.136484, [3, -0.3, 0], [3, 0.333333, 0]], [0.136484, [3, -0.333333, 0], [3, 0.333333, 0]], [0.136484, [3, -0.333333, 0], [3, 0.333333, 0]], [0.136484, [3, -0.333333, 0], [3, 0.333333, 0]], [0.136484, [3, -0.333333, 0], [3, 0.333333, 0]], [0.136484, [3, -0.333333, 0], [3, 0.333333, 0]], [0.136484, [3, -0.333333, 0], [3, 0, 0]]])

try:
  # uncomment the following line and modify the IP if you use this script outside Choregraphe.
  motion = ALProxy("ALMotion", "127.0.0.1", 57759)
  motion.angleInterpolationBezier(names, times, keys)
except BaseException, err:
  print err
